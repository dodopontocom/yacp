name: Verify Pool

on:
  issues:
    types: [opened, reopened]

jobs:
  issue-to-json:
    if: contains(github.event.issue.body, '>>pool_bech32_id<<')
    runs-on: ubuntu-latest
    name: Convert issue body to json
    outputs:
      payload-parsed: ${{ steps.payload.outputs.json_var }}
    steps:

      - name: Run parser
        id: parse
        uses: peter-murray/issue-forms-body-parser@v2.0.0
        with:
          issue_id: ${{ github.event.issue.number }}
          separator: '###'
          label_marker_start: '>>'
          label_marker_end: '<<'

      - name: Set Output
        id: payload
        run: echo json_var='${{ steps.parse.outputs.payload }}' >> $GITHUB_OUTPUT

  term-pool:
    if: contains(github.event.issue.body, '>>pool_bech32_id<<')
    runs-on: ubuntu-latest
    needs: issue-to-json
    name: Execute Pool add Pipeline
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: 'infrastructure'

      - id: status
        name: 'Pool add'
        continue-on-error: true
        env:
          pool_bech32_id: ${{ fromJson(needs.issue-to-json.outputs.payload-parsed)['pool_bech32_id'] }}
          cardano_alliances: ${{ fromJson(needs.issue-to-json.outputs.payload-parsed)['cardano_alliances'] }}
        run: |
          if [[ ! $(cat pool.csv | grep ${pool_bech32_id}) ]]; then
            if [[ $(curl -sS -X POST "https://api.koios.rest/api/v0/pool_info" \
              -H "Content-Type: application/json" \
              -d '{"_pool_bech32_ids":["'${pool_bech32_id}'"]}' \
              | jq -r '.[].pool_status') == "registered" ]]; then
              echo "pool is registered"
              ticker=$(curl -sS -X POST "https://api.koios.rest/api/v0/pool_info" \
              -H "Content-Type: application/json" \
              -d '{"_pool_bech32_ids":["'${pool_bech32_id}'"]}' \
              | jq -r '.[].meta_json.ticker')
              echo ${pool_bech32_id},${ticker} >> pool.csv
              else
                echo "pool is not registered on Cardano mainnet"
                exit -1
            fi
            else
                echo "pool is already added"
          fi
      
      - id: close
        name: 'Close issue'
        uses: peter-evans/close-issue@v2
        if: steps.status.outcome == 'success'
        with:
          comment: Poll added. Verify - https://github.com/dodopontocom/yacp/blob/infrastructure/pool.csv
          labels: |
            pool_added
            
      - id: close_error
        name: 'Close issue as not implemented'
        uses: peter-evans/close-issue@v2
        if: steps.status.outcome != 'success'
        with:
          close-reason: not_planned
          comment: Probably pool not found nor registered. Maybe api was unavailable, please try later again
          labels: |
            pool_not_added
  
  send-notification:
    runs-on: ubuntu-latest
    name: Send test notification to Discord Channel
    needs: term-pool
    env:
        ODROID_DISCORD_BTOKEN: ${{secrets.ODROID_DISCORD_BTOKEN}}
    steps:
      - name: Send test notification to Discord Channel
        run: |
          curl -X POST https://discord.com/api/channels/1043461795626631269/messages \
          -H "Authorization: Bot ${ODROID_DISCORD_BTOKEN}" \
          -H "Content-Type:application/json" --data \
          '{"content": "###############################\n\nPool Added Successfully to xSPA\n\n###############################"}'